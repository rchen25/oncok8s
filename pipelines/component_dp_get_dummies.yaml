name: Get dummies
description: Distribute categorical features into separate features.
inputs:
- {name: file, type: CSV, description: A string containing path to input data.}
outputs:
- {name: output_csv_features, type: CSV}
- {name: output_csv_target, type: CSV}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'pandas==1.1.4' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet
      --no-warn-script-location 'pandas==1.1.4' --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def get_dummies(file_path,
                      output_csv_features,
                      output_csv_target):
          """Distribute categorical features into separate features.
              Input: CSV with categorical (and numeric) features
              Output: CSV with categorical features separated into dummies.

          Args:
              file_path: A string containing path to input data.
              output_csv: A string containing path to processed data.
          """
          import glob
          import pandas as pd

          df = pd.read_csv(filepath_or_buffer=file_path)
          l_col_names = list(df.columns)

          # assume last col is target
          df_target = df[l_col_names[-1]]

          # create dummies for every col except last
          df_features = df[l_col_names[:len(l_col_names)-1]]
          df_features_dummies = pd.get_dummies(df_features)

          # write outputs
          df_features_dummies.to_csv(output_csv_features, index = False, header = True)
          df_target.to_csv(output_csv_target, index = False, header = True)

      import argparse
      _parser = argparse.ArgumentParser(prog='Get dummies', description='Distribute categorical features into separate features.')
      _parser.add_argument("--file", dest="file_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--output-csv-features", dest="output_csv_features", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--output-csv-target", dest="output_csv_target", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = get_dummies(**_parsed_args)
    args:
    - --file
    - {inputPath: file}
    - --output-csv-features
    - {outputPath: output_csv_features}
    - --output-csv-target
    - {outputPath: output_csv_target}
